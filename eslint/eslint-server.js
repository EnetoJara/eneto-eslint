module.exports = {
    "root": true,
    "env": {
        "browser": false,
        "es6": true,
        "node": true
    },
    "extends": [
        "eslint:recommended",
        "prettier",
        "jsdoc",
        "plugin:prettier/recommended",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
        "plugin:react/recommended"
    ],
    "globals": {
        "Atomics": "readonly",
        "SharedArrayBuffer": "readonly"
    },
    "parser": "@typescript-eslint/parser",
    "plugins": [
        "prettier",
        "promise",
        "eslint-plugin",
        "@typescript-eslint",
        "eslint-comments"
    ],
    parserOptions: {
        project: "../../tsconfig.json",
        ecmaVersion: 2019,
    },
    plugins: ["@typescript-eslint", "jsdoc", "import", "eslint-comments", "eslint-plugin"],
    rules: {
        "for-direction": "error",
        "getter-return": "error",
        "no-async-promise-executor": "error",
        "no-await-in-loop": "error",
        "no-compare-neg-zero": "error",
        "no-dupe-args": "error",
        "no-console":0,
        "no-debugger": 0,
        "no-dupe-else-if":"error",
        "no-func-assign": "error",
        "no-irregular-whitespace": "error",
        "no-misleading-character-class": "error",
        "no-obj-calls": "error",
        "no-setter-return": "error",
        "no-unreachable": "error",
        "no-template-curly-in-string": "error",
        "accessor-pairs": "error",
        "array-callback-return": "error",
        "block-scope-var": "error",
        "default-case": "error",
        "eqeqeq": "error",
        "no-else-return": "error",
        indent: ["error", 4],
        "default-param-last": "error",
        "linebreak-style": ["error", "unix"],
        quotes: ["error", "double"],
        semi: ["error", "always"],
        "prefer-spread": ["error","always"],
        "prefer-rest-params": ["error","always"],
        "prefer-template": ["error", "always"],
        "@typescript-eslint/adjacent-overload-signatures": "error",
        "@typescript-eslint/no-var-requires": "warn",
        "@typescript-eslint/await-thenable": "error",
        "@typescript-eslint/ban-ts-ignore": "error",
        "@typescript-eslint/ban-types": "error",
        "@typescript-eslint/camelcase": "error",
        "@typescript-eslint/class-name-casing": "error",
        "@typescript-eslint/brace-style": "error",
        "@typescript-eslint/consistent-type-assertions": "error",
        "@typescript-eslint/explicit-function-return-type": "error",
        "@typescript-eslint/explicit-member-accessibility": "error",
        "@typescript-eslint/no-explicit-any": "warn",
        "@typescript-eslint/no-use-before-define": "error",
        "@typescript-eslint/require-await": "error",
        "@typescript-eslint/return-await": "error",
        "@typescript-eslint/unbound-method": "warn",
        "@typescript-eslint/space-before-function-paren": "error",
        "@typescript-eslint/no-unused-vars": ["error", { args: "none" }],
        "padding-line-between-statements": [
            "error",
            { blankLine: "any", prev: "*", next: "*" },
            { blankLine: "always", prev: "*", next: ["return"] },
            { blankLine: "always", prev: "directive", next: "*" },
            { blankLine: "always", prev: "directive", next: "*" },

            { blankLine: "always", prev: ["const", "let", "var"], next: "*" },
            { blankLine: "never", prev: ["const", "let", "var"], next: ["const", "let", "var"] },
            { blankLine: "always", prev: "export", next: ["const", "let", "var", "function"] },
        ],
    },
}
